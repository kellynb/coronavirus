{"version":3,"sources":["Images/death_face.png","Images/hear_face.png","Images/neutral.png","Images/oozy_face.png","Images/smile.png","serviceWorker.js","helpers.js","constants.js","Components/EmojiRange/emoji.js","Components/EmojiRange/emojiRange.js","Components/CountryStats/TwoDayTotal.js","Components/CountryStats/CovidDeathChart.js","Components/CountryStats/YearToDate.js","Components/CountryStats/CountryStats.js","endpoints.js","Redux/actions.js","App.js","Redux/Reducers/loading.js","Redux/Reducers/index.js","Redux/Reducers/location.js","Redux/Reducers/global.js","Redux/store.js","Theme/theme.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","emojiLogic","currentCountry","worldData","emojiImg","undefined","virusToday","virusYesterday","score","change","getScore","countryToWorld","deathsPerOneMillion","deathsPerMill","todayDeaths","deathChange","countryChange","calculateComponentWidth","isBelowXSM","isBelowSM","updateLatitudeLongitudeValue","number","numStr","toString","dotIndx","indexOf","finalStr","slice","parseFloat","updateNums","num","replace","emojiShow","deathFace","oozyFace","neutralFace","smileFace","heartFace","emojiScale","emojiOptions","value","label","emoji","Emoji","_ref","country","world","size","emojiImage","React","createElement","src","width","height","alt","renderLabel","text","Box","textAlign","Typography","variant","EmojiRange","theme","useTheme","xsMatch","useMediaQuery","breakpoints","down","smMatch","minWidth","Slider","step","valueLabelDisplay","marks","map","_ref2","track","color","TwoDayTotal","useSelector","state","currentLocation","display","flexDirection","mt","flexGrow","align","todayCases","Tooltip","indexValue","muiTheme","bgColor","palette","secondary","dark","primary","light","bgcolor","m","p","CovidDeathChart","countryDeaths","globalDeaths","ResponsiveBar","data","place","keys","indexBy","margin","top","right","bottom","left","colors","main","pixelRatio","padding","layout","borderWidth","borderRadius","borderColor","from","modifiers","axisLeft","tickSize","tickPadding","tickRotation","axisBottom","axisRight","axisTop","enableGridX","enableGridY","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","tooltip","props","Object","assign","YearToDate","globalStats","name","cases","deaths","_useSelector","loading","isLoadingLocationData","hasLocationError","_useState","useState","_useState2","_slicedToArray","dateRangeStats","setDateRangeStats","showLoctionError","showYearData","showTwoDaysData","ToggleButtonGroup","exclusive","onChange","_e","rangeValue","aria-label","ToggleButton","borderTop","alignItems","justifyContent","ErrorOutlineIcon","fontSize","ml","CircularProgress","disableShrink","TwoDayCases","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","UserEndpoints","lat","long","concat","VirusEndpoints","isYesterday","getUserLocation","_asyncToGenerator","_callee","userResponse","user","_context","fetch","json","apply","arguments","getCountryData","_callee2","countryCovidData","_context2","mode","population","casesPerOneMillion","_x","_x2","getYesterdayGlobalData","_ref3","_callee3","globalResponse","globalData","_context3","casesPerMill","getCountryLocation","_ref4","_callee4","response","_context4","country_code","address","country_name","_x3","_x4","App","isInitialLoading","hasAppError","dispatch","useDispatch","useEffect","countryTodayData","countryYestedayData","globalYesterdayData","payload","t0","console","log","Container","mb","Grid","container","direction","my","Skeleton","animation","GoogleMapReact","bootstrapURLKeys","process","defaultCenter","lng","defaultZoom","onClick","updatedLat","updatedLong","responseData","_objectSpread","latitude","longitude","findCountry","Fragment","CountryStats","initialState","combineReducers","action","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","colorPallete","createTheme","xs","sm","md","lg","xl","typography","fontFamily","join","body1","body2","spacing","overrides","MuiToggleButton","root","backgroundColor","border","MuiSlider","cursor","h2","_defineProperty","ReactDOM","render","StrictMode","Provider","store","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.14e91e53.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/death_face.88393cd8.png\";","module.exports = __webpack_public_path__ + \"static/media/hear_face.2f8f9615.png\";","module.exports = __webpack_public_path__ + \"static/media/neutral.26eaaf0f.png\";","module.exports = __webpack_public_path__ + \"static/media/oozy_face.b46ea818.png\";","module.exports = __webpack_public_path__ + \"static/media/smile.2b2597e5.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const emojiLogic = (currentCountry, worldData) => {\n\tlet emojiImg = undefined;\n\tconst { virusToday, virusYesterday } = currentCountry;\n\n\tconst countryToWorld = (currentCountry, worldData) => {\n\t\tconst worldChange = ((currentCountry - worldData) / worldData) * 100;\n\t\tconst findScore = score(worldChange);\n\t\treturn findScore;\n\t};\n\n\tconst countryChange = (virusToday, virusYesterday) => {\n\t\tif (virusYesterday.todayDeaths) {\n\t\t\tconst deathChange =\n\t\t\t\t((virusToday.todayDeaths - virusYesterday.todayDeaths) /\n\t\t\t\t\tvirusYesterday.todayDeaths) *\n\t\t\t\t100;\n\t\t\tconst findScore = score(deathChange);\n\t\t\treturn findScore;\n\t\t} else if (virusToday.todayDeaths) {\n\t\t\tconst deathChange = virusToday.todayDeaths * 100;\n\t\t\tconst findScore = score(deathChange);\n\t\t\treturn findScore;\n\t\t} else {\n\t\t\tconst findScore = score(-100);\n\t\t\treturn findScore;\n\t\t}\n\t};\n\n\tconst score = (change) => {\n\t\tlet score = 0;\n\t\tif (change <= -100) {\n\t\t\tscore = 2;\n\t\t} else if (change <= -50) {\n\t\t\tscore = 1;\n\t\t} else if (change <= 50) {\n\t\t\tscore = 0;\n\t\t} else if (change <= 100) {\n\t\t\tscore = -1;\n\t\t} else {\n\t\t\tscore = -2;\n\t\t}\n\t\treturn score;\n\t};\n\n\tif (virusYesterday) {\n\t\tconst getScore =\n\t\t\tcountryToWorld(virusToday.deathsPerOneMillion, worldData.deathsPerMill) +\n\t\t\tcountryChange(virusToday, virusYesterday);\n\n\t\tif (getScore < -2) {\n\t\t\temojiImg = \"deathFace\";\n\t\t} else if (getScore < 0) {\n\t\t\temojiImg = \"oozyFace\";\n\t\t} else if (getScore < 2) {\n\t\t\temojiImg = \"neutralFace\";\n\t\t} else if (getScore < 4) {\n\t\t\temojiImg = \"smileFace\";\n\t\t} else {\n\t\t\temojiImg = \"heartFace\";\n\t\t}\n\t}\n\n\treturn emojiImg;\n};\n\nexport const calculateContainerWidth = (isBelowXSM, isBelowSM) => {\n\tif (isBelowXSM) {\n\t\treturn 300;\n\t}\n\tif (isBelowSM) {\n\t\treturn 350;\n\t}\n\treturn 500;\n};\n\nexport const calculateComponentWidth = (isBelowXSM, isBelowSM) => {\n\tif (isBelowXSM) {\n\t\treturn 250;\n\t}\n\tif (isBelowSM) {\n\t\treturn 350;\n\t}\n\treturn 400;\n};\n\nexport const updateLatitudeLongitudeValue = (number) => {\n\tconst numStr = number.toString();\n\tconst dotIndx = numStr.indexOf(\".\");\n\tconst finalStr = numStr.slice(0, dotIndx + 7);\n\tconst finalFlt = parseFloat(finalStr);\n\treturn finalFlt;\n};\n\nexport const updateNums = (num) =>\n\tnum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n","import deathFace from \"./Images/death_face.png\";\nimport heartFace from \"./Images/hear_face.png\";\nimport neutralFace from \"./Images/neutral.png\";\nimport oozyFace from \"./Images/oozy_face.png\";\nimport smileFace from \"./Images/smile.png\";\n\nexport const emojiShow = {\n\tdeathFace: deathFace,\n\toozyFace: oozyFace,\n\tneutralFace: neutralFace,\n\tsmileFace: smileFace,\n\theartFace: heartFace,\n};\n\nexport const emojiScale = {\n\tdeathFace: 0,\n\toozyFace: 25,\n\tneutralFace: 50,\n\tsmileFace: 75,\n\theartFace: 100,\n};\n\nexport const emojiOptions = [\n\t{\n\t\tvalue: 0,\n\t\tlabel: \"The Plague\",\n\t\temoji: deathFace,\n\t},\n\t{\n\t\tvalue: 25,\n\t\tlabel: \"Big Risk\",\n\t\temoji: oozyFace,\n\t},\n\t{\n\t\tvalue: 50,\n\t\tlabel: \"Livable\",\n\t\temoji: neutralFace,\n\t},\n\t{\n\t\tvalue: 75,\n\t\tlabel: \"Self Party\",\n\t\temoji: smileFace,\n\t},\n\t{\n\t\tvalue: 100,\n\t\tlabel: \"Block Party\",\n\t\temoji: heartFace,\n\t},\n];\n","import React from \"react\";\n\n// @Helpers\nimport { emojiLogic } from \"../../helpers\";\n\n// @Static\nimport { emojiShow } from \"../../constants\";\n\nconst Emoji = ({ country, world, size }) => {\n\tconst emojiImage = emojiShow[emojiLogic(country, world)];\n\n\treturn <img src={emojiImage} width={size} height={size} alt=\"emoji\" />;\n};\n\nexport default Emoji;\n","import React from \"react\";\n\n// @Library\nimport { Box, Typography } from \"@material-ui/core\";\nimport Slider from \"@material-ui/core/Slider\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\n// @Helpers\nimport { emojiLogic, calculateComponentWidth } from \"../../helpers\";\n\n// @Static\nimport { emojiScale, emojiOptions } from \"../../constants\";\n\nconst renderLabel = (emoji, text) => {\n\treturn (\n\t\t<Box textAlign=\"center\">\n\t\t\t<img src={emoji} width={30} height={30} alt=\"emoji\"></img>\n\t\t\t<Typography variant=\"body2\">{text}</Typography>\n\t\t</Box>\n\t);\n};\n\nconst EmojiRange = ({ country, world }) => {\n\tconst theme = useTheme();\n\tconst xsMatch = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\tconst smMatch = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n\treturn (\n\t\t<Box\n\t\t\tminWidth={calculateComponentWidth(xsMatch, smMatch)}\n\t\t\ttextAlign=\"center\"\n\t\t>\n\t\t\t<Slider\n\t\t\t\tvalue={emojiScale[emojiLogic(country, world)]}\n\t\t\t\tstep={25}\n\t\t\t\tvalueLabelDisplay=\"off\"\n\t\t\t\tmarks={emojiOptions.map(({ value, label, emoji }) => ({\n\t\t\t\t\tvalue,\n\t\t\t\t\tlabel: renderLabel(emoji, label),\n\t\t\t\t}))}\n\t\t\t\ttrack={false}\n\t\t\t\tcolor=\"primary\"\n\t\t\t/>\n\t\t</Box>\n\t);\n};\n\nexport default EmojiRange;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\n// @Helpers\nimport { updateNums } from \"../../helpers\";\n\n// @Libraries\nimport { Box, Typography } from \"@material-ui/core\";\n\nconst TwoDayTotal = () => {\n\tconst currentCountry = useSelector((state) => state.currentLocation);\n\tconst { virusToday, virusYesterday } = currentCountry;\n\n\treturn (\n\t\t<div>\n\t\t\t{virusToday && (\n\t\t\t\t<div>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Box display=\"flex\" flexDirection=\"row\" mt={1}>\n\t\t\t\t\t\t\t<Box flexGrow={1}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\" align=\"center\">\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\tNew Cases\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" align=\"center\">\n\t\t\t\t\t\t\t\t\t{updateNums(\n\t\t\t\t\t\t\t\t\t\tvirusToday.todayCases + virusYesterday.todayCases\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box flexGrow={1}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\" align=\"center\">\n\t\t\t\t\t\t\t\t\tDeaths\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" align=\"center\">\n\t\t\t\t\t\t\t\t\t{updateNums(\n\t\t\t\t\t\t\t\t\t\tvirusToday.todayDeaths + virusYesterday.todayDeaths\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TwoDayTotal;\n","import React from \"react\";\n\n// @Hooks\nimport { useTheme } from \"@material-ui/core/styles\";\n\n// @Libraries\nimport { Box, Typography } from \"@material-ui/core\";\nimport { ResponsiveBar } from \"@nivo/bar\";\n\nconst Tooltip = ({ value, color, indexValue, muiTheme }) => {\n\tconst bgColor =\n\t\tindexValue === \"World\"\n\t\t\t? muiTheme.palette.secondary.dark\n\t\t\t: muiTheme.palette.primary.light;\n\n\treturn (\n\t\t<Box\n\t\t\tbgcolor={bgColor}\n\t\t\tm=\"-10px\"\n\t\t\tp={0.5}\n\t\t\tdisplay=\"flex\"\n\t\t\tflexDirection=\"column\"\n\t\t>\n\t\t\t<Typography variant=\"caption\">{indexValue} </Typography>\n\t\t\t<Typography variant=\"caption\">{value} Deaths/Million</Typography>\n\t\t</Box>\n\t);\n};\n\nconst CovidDeathChart = ({ country, countryDeaths, globalDeaths, width }) => {\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<Box mt={1} height={200} width={width}>\n\t\t\t<Box>\n\t\t\t\t<Typography variant=\"body1\" align=\"center\">\n\t\t\t\t\tDeaths per Million\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant=\"body2\" align=\"center\">\n\t\t\t\t\tCountry vs World\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t\t<ResponsiveBar\n\t\t\t\tdata={[\n\t\t\t\t\t{\n\t\t\t\t\t\tplace: country,\n\t\t\t\t\t\t\"Deaths Country\": countryDeaths,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tplace: \"World\",\n\t\t\t\t\t\t\"Deaths World\": globalDeaths,\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t\tkeys={[\"Deaths Country\", \"Deaths World\"]}\n\t\t\t\tindexBy=\"place\"\n\t\t\t\tmargin={{ top: 20, right: 70, bottom: 10, left: 70 }}\n\t\t\t\tcolors={[theme.palette.primary.main, theme.palette.secondary.main]}\n\t\t\t\tpixelRatio={1}\n\t\t\t\tpadding={0.5}\n\t\t\t\tlayout=\"horizontal\"\n\t\t\t\tborderWidth={1}\n\t\t\t\tborderRadius={2}\n\t\t\t\tborderColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n\t\t\t\taxisLeft={{ tickSize: 0, tickPadding: 10, tickRotation: 45 }}\n\t\t\t\taxisBottom={null}\n\t\t\t\taxisRight={null}\n\t\t\t\taxisTop={null}\n\t\t\t\tenableGridX\n\t\t\t\tenableGridY={false}\n\t\t\t\tenableLabel\n\t\t\t\tlabelSkipWidth={1}\n\t\t\t\tlabelSkipHeight={1}\n\t\t\t\tlabelTextColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n\t\t\t\ttooltip={(props) => <Tooltip muiTheme={theme} {...props} />}\n\t\t\t/>\n\t\t</Box>\n\t);\n};\n\nexport default CovidDeathChart;\n","import React from \"react\";\n\n// @Components\nimport CovidDeathChart from \"./CovidDeathChart\";\n\n// @Helpers\nimport { calculateComponentWidth, updateNums } from \"../../helpers\";\n\n// @Libraries\nimport { useSelector } from \"react-redux\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nconst YearToDate = () => {\n\tconst theme = useTheme();\n\tconst xsMatch = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\tconst smMatch = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n\tconst currentCountry = useSelector((state) => state.currentLocation);\n\tconst worldData = useSelector((state) => state.globalStats);\n\tconst { name, virusToday } = currentCountry;\n\n\treturn (\n\t\t<div>\n\t\t\t{virusToday && (\n\t\t\t\t<div>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Box display=\"flex\" flexDirection=\"row\" mt={1}>\n\t\t\t\t\t\t\t<Box flexGrow={1}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\" align=\"center\">\n\t\t\t\t\t\t\t\t\tTotal Cases\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" align=\"center\">\n\t\t\t\t\t\t\t\t\t{updateNums(virusToday.cases)}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box flexGrow={1}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\" align=\"center\">\n\t\t\t\t\t\t\t\t\tTotal Deaths\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" align=\"center\">\n\t\t\t\t\t\t\t\t\t{updateNums(virusToday.deaths)}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<CovidDeathChart\n\t\t\t\t\t\twidth={calculateComponentWidth(xsMatch, smMatch)}\n\t\t\t\t\t\tcountry={name}\n\t\t\t\t\t\tcountryDeaths={virusToday.deathsPerOneMillion}\n\t\t\t\t\t\tglobalDeaths={worldData.deathsPerMill}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default YearToDate;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n// @Components\nimport TwoDayCases from \"./TwoDayTotal\";\nimport YearToDate from \"./YearToDate\";\n\n// @Libraries\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\n\nexport default () => {\n\tconst { isLoadingLocationData, hasLocationError } = useSelector(\n\t\t(state) => state.loading\n\t);\n\tconst [dateRangeStats, setDateRangeStats] = useState(\"year\");\n\n\tconst handleDateRange = (_e, rangeValue) => {\n\t\tif (rangeValue) {\n\t\t\tsetDateRangeStats(rangeValue);\n\t\t}\n\t};\n\n\tconst showLoctionError = hasLocationError && !isLoadingLocationData;\n\tconst showYearData =\n\t\t!hasLocationError && !isLoadingLocationData && dateRangeStats === \"year\";\n\tconst showTwoDaysData =\n\t\t!hasLocationError && !isLoadingLocationData && dateRangeStats !== \"year\";\n\n\treturn (\n\t\t<div>\n\t\t\t<ToggleButtonGroup\n\t\t\t\tvalue={dateRangeStats}\n\t\t\t\texclusive\n\t\t\t\tonChange={handleDateRange}\n\t\t\t\taria-label=\"2Days/Years Toggle Buttons\"\n\t\t\t\tcolor=\"black\"\n\t\t\t>\n\t\t\t\t<ToggleButton value=\"year\" aria-label=\"Year to Date Values\">\n\t\t\t\t\t<Typography variant=\"body1\" align=\"center\">\n\t\t\t\t\t\tYEAR to DATE\n\t\t\t\t\t</Typography>\n\t\t\t\t</ToggleButton>\n\t\t\t\t<ToggleButton value=\"2days\" aria-label=\"2 Day Values\">\n\t\t\t\t\t<Typography variant=\"body1\" align=\"center\">\n\t\t\t\t\t\tPAST 2 DAYS\n\t\t\t\t\t</Typography>\n\t\t\t\t</ToggleButton>\n\t\t\t</ToggleButtonGroup>\n\t\t\t<Box borderTop={1} mt={0.5} borderColor=\"secondary.main\">\n\t\t\t\t{showLoctionError && (\n\t\t\t\t\t<Box\n\t\t\t\t\t\tmt={2}\n\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ErrorOutlineIcon color=\"error\" fontSize=\"large\" />\n\t\t\t\t\t\t<Box ml={1} textAlign=\"start\">\n\t\t\t\t\t\t\t<Typography> Country Covid Error </Typography>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\tClick on the country to try again\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t\t{isLoadingLocationData && (\n\t\t\t\t\t<Box mt={2}>\n\t\t\t\t\t\t<CircularProgress disableShrink />\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t\t{showYearData && <YearToDate />}\n\t\t\t\t{showTwoDaysData && <TwoDayCases />}\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n","const UserEndpoints = {\n\tlocation: \"https://ipapi.co/json/\",\n\tgeoLocation: (lat, long) =>\n\t\t`https://geocode.maps.co/reverse?lat=${lat}&lon=${long}`,\n};\n\nconst VirusEndpoints = {\n\tcountryTotal: (country, isYesterday) =>\n\t\t`https://corona.lmao.ninja/v2/countries/${country}?yesterday=${isYesterday}&strict=true&query`,\n\tyesterdayCountries: \"https://corona.lmao.ninja/v2/all?yesterday\",\n};\n\nexport const getUserLocation = async () => {\n\tconst userResponse = await fetch(UserEndpoints.location);\n\tconst user = await userResponse.json();\n\treturn user;\n};\n\nexport const getCountryData = async (country, isYesterday) => {\n\tconst data = await fetch(VirusEndpoints.countryTotal(country, isYesterday), {\n\t\tmode: \"no-cors\",\n\t});\n\tconst countryCovidData = await data.json();\n\n\tif (\"message\" in countryCovidData) {\n\t\treturn \"NO_COUNTRY_LOCATION\";\n\t}\n\n\treturn {\n\t\tcases: countryCovidData.cases,\n\t\tdeaths: countryCovidData.deaths,\n\t\ttodayCases: countryCovidData.todayCases,\n\t\ttodayDeaths: countryCovidData.todayDeaths,\n\t\tpopulation: countryCovidData.population,\n\t\tcasesPerOneMillion: countryCovidData.casesPerOneMillion,\n\t\tdeathsPerOneMillion: countryCovidData.deathsPerOneMillion,\n\t};\n};\n\nexport const getYesterdayGlobalData = async () => {\n\tconst globalResponse = await fetch(VirusEndpoints.yesterdayCountries, {\n\t\tmode: \"no-cors\",\n\t});\n\tconst globalData = await globalResponse.json();\n\n\treturn {\n\t\tcases: globalData.cases,\n\t\tcasesPerMill: globalData.casesPerOneMillion,\n\t\tdeathsPerMill: globalData.deathsPerOneMillion,\n\t};\n};\n\nexport const getCountryLocation = async (lat, long) => {\n\tconst response = await fetch(UserEndpoints.geoLocation(lat, long));\n\tconst data = await response.json();\n\n\tif (\"error\" in data) {\n\t\treturn \"NO_COUNTRY_FOUND\";\n\t}\n\n\treturn {\n\t\tcountry_code: data.address.country_code,\n\t\tcountry_name: data.address.country,\n\t};\n};\n","import {\n\tgetUserLocation,\n\tgetCountryData,\n\tgetCountryLocation,\n\tgetYesterdayGlobalData,\n} from \"../endpoints\";\n\nimport { updateLatitudeLongitudeValue } from \"../helpers\";\n\nexport const initialData = () => async (dispatch) => {\n\ttry {\n\t\tdispatch({ type: \"IS_LOADING_INITIAL_DATA\" });\n\t\tconst user = await getUserLocation();\n\t\tdispatch({\n\t\t\ttype: \"CURRENT_LOCATION\",\n\t\t\tpayload: user,\n\t\t});\n\n\t\tconst countryTodayData = await getCountryData(user.country, false);\n\n\t\tif (countryTodayData === \"NO_COUNTRY_LOCATION\") {\n\t\t\treturn dispatch({ type: \"NO_COUNTRY_DATA\" });\n\t\t}\n\n\t\tconst countryYestedayData = await getCountryData(user.country, true);\n\n\t\tif (countryTodayData === \"NO_COUNTRY_LOCATION\") {\n\t\t\treturn dispatch({ type: \"NO_COUNTRY_DATA\" });\n\t\t}\n\n\t\tconst virusData = {\n\t\t\tvirusToday: countryTodayData,\n\t\t\tvirusYesterday: countryYestedayData,\n\t\t};\n\n\t\tdispatch({\n\t\t\ttype: \"COUNTRY_VIRUS_DATA\",\n\t\t\tpayload: virusData,\n\t\t});\n\n\t\tconst globalYesterdayData = await getYesterdayGlobalData();\n\n\t\tdispatch({\n\t\t\ttype: \"GLOBAL_STATS\",\n\t\t\tpayload: globalYesterdayData,\n\t\t});\n\n\t\treturn dispatch({ type: \"HAS_LOADED_INTIAL_DATA\" });\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\treturn dispatch({ type: \"APP_ERROR\" });\n\t}\n};\n\nexport const findCountry = (lat, lng) => async (dispatch) => {\n\ttry {\n\t\tconst updatedLat = updateLatitudeLongitudeValue(lat);\n\t\tconst updatedLong = updateLatitudeLongitudeValue(lng);\n\t\tdispatch({ type: \"IS_LOADING_GEO_DATA\" });\n\t\tdispatch({ type: \"RESET_LOCATION_ERROR\" });\n\n\t\tconst responseData = await getCountryLocation(updatedLat, updatedLong);\n\n\t\tif (responseData === \"NO_COUNTRY_FOUND\") {\n\t\t\treturn dispatch({ type: \"NO_COUNTRY_DATA\" });\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: \"CURRENT_LOCATION\",\n\t\t\tpayload: {\n\t\t\t\t...responseData,\n\t\t\t\tlatitude: updatedLat,\n\t\t\t\tlongitude: updatedLong,\n\t\t\t},\n\t\t});\n\n\t\tconst countryTodayData = await getCountryData(\n\t\t\tresponseData.country_code,\n\t\t\tfalse\n\t\t);\n\n\t\tif (countryTodayData === \"NO_COUNTRY_LOCATION\") {\n\t\t\treturn dispatch({ type: \"NO_COUNTRY_DATA\" });\n\t\t}\n\n\t\tconst countryYestedayData = await getCountryData(\n\t\t\tresponseData.country_code,\n\t\t\ttrue\n\t\t);\n\t\tif (countryTodayData === \"NO_COUNTRY_LOCATION\") {\n\t\t\treturn dispatch({ type: \"NO_COUNTRY_DATA\" });\n\t\t}\n\n\t\tconst virusData = {\n\t\t\tvirusToday: countryTodayData,\n\t\t\tvirusYesterday: countryYestedayData,\n\t\t};\n\n\t\tdispatch({\n\t\t\ttype: \"COUNTRY_VIRUS_DATA\",\n\t\t\tpayload: virusData,\n\t\t});\n\n\t\treturn dispatch({ type: \"HAS_LOADED_GEO_DATA\" });\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\treturn dispatch({ type: \"GEO_CODE_ERROR\" });\n\t}\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// @Components\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Emoji from \"./Components/EmojiRange/emoji\";\nimport EmojiRange from \"./Components/EmojiRange/emojiRange\";\nimport CountryStats from \"./Components/CountryStats/CountryStats\";\n\n// @Helpers\nimport { calculateContainerWidth } from \"./helpers\";\n\n// @Libraries\nimport { Box, Grid, Container, Typography } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\n\nimport GoogleMapReact from \"google-map-react\";\n\n// @Redux\nimport { initialData } from \"./Redux/actions\";\nimport { findCountry } from \"./Redux/actions\";\n\nfunction App() {\n\tconst currentCountry = useSelector((state) => state.currentLocation);\n\tconst worldData = useSelector((state) => state.globalStats);\n\tconst {\n\t\tisInitialLoading,\n\t\tisLoadingLocationData,\n\t\thasAppError,\n\t\thasLocationError,\n\t} = useSelector((state) => state.loading);\n\n\tconst dispatch = useDispatch();\n\tconst theme = useTheme();\n\tconst xsMatch = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\tconst smMatch = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n\tconst { name, lat, long, virusYesterday } = currentCountry;\n\n\tuseEffect(() => {\n\t\tdispatch(initialData());\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst onMapChange = ({ lat, lng }) => {\n\t\tdispatch(findCountry(lat, lng));\n\t};\n\n\tconst renderCountryName = () => {\n\t\tif (isLoadingLocationData) {\n\t\t\treturn <CircularProgress size={28} />;\n\t\t}\n\t\tif (hasLocationError) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Box display=\"flex\" alignItems=\"center\">\n\t\t\t\t\t\t<ErrorOutlineIcon color=\"error\" fontSize=\"large\" />\n\t\t\t\t\t\t<Box ml={1}>\n\t\t\t\t\t\t\t<Typography> Country Covid Error </Typography>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\tClick on the country to try again\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\n\t\treturn <Typography variant=\"h4\">{name}</Typography>;\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<Box mt={3} borderColor=\"primary.main\">\n\t\t\t\t<Typography variant=\"h2\" align=\"center\">\n\t\t\t\t\tCoronavirus Emoji Score\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant=\"body1\" align=\"center\" color=\"textSecondary\">\n\t\t\t\t\tClick on a Country, get the Emoji Score\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\n\t\t\t<Box mt={2} mb={5}>\n\t\t\t\t{hasAppError ? (\n\t\t\t\t\t<Box m=\"15% 0 0 0\">\n\t\t\t\t\t\t<Typography variant=\"h4\" align=\"center\" color=\"error\">\n\t\t\t\t\t\t\tApp Error: Attacked by COVID\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"h6\" align=\"center\" color=\"textSecondary\">\n\t\t\t\t\t\t\tPlease Refresh to Try Again\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t) : (\n\t\t\t\t\t<Grid container direction=\"row\" justifyContent=\"space-around\" my={2}>\n\t\t\t\t\t\t<Box width={600} height={550} mb={2}>\n\t\t\t\t\t\t\t{isInitialLoading && (\n\t\t\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\t\t\t\tanimation=\"wave\"\n\t\t\t\t\t\t\t\t\tvariant=\"rect\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!isInitialLoading && typeof lat == \"number\" && (\n\t\t\t\t\t\t\t\t<GoogleMapReact\n\t\t\t\t\t\t\t\t\tbootstrapURLKeys={{ key: process.env.REACT_APP_MAP }}\n\t\t\t\t\t\t\t\t\tdefaultCenter={{ lat, lng: long }}\n\t\t\t\t\t\t\t\t\tdefaultZoom={4}\n\t\t\t\t\t\t\t\t\tonClick={onMapChange}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Box lat={lat} lng={long}>\n\t\t\t\t\t\t\t\t\t\t{isLoadingLocationData && <CircularProgress size={35} />}\n\t\t\t\t\t\t\t\t\t\t{!isLoadingLocationData && hasLocationError && (\n\t\t\t\t\t\t\t\t\t\t\t<ErrorOutlineIcon color=\"error\" fontSize=\"large\" />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{!isLoadingLocationData &&\n\t\t\t\t\t\t\t\t\t\t\t!hasLocationError &&\n\t\t\t\t\t\t\t\t\t\t\tvirusYesterday && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Emoji\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={35}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcountry={currentCountry}\n\t\t\t\t\t\t\t\t\t\t\t\t\tworld={worldData}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</GoogleMapReact>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\twidth={calculateContainerWidth(xsMatch, smMatch)}\n\t\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\t\tflexDirection=\"column\"\n\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{isInitialLoading && (\n\t\t\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\theight={550}\n\t\t\t\t\t\t\t\t\tanimation=\"wave\"\n\t\t\t\t\t\t\t\t\tvariant=\"rect\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!isInitialLoading && (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h4\">Country:</Typography>\n\t\t\t\t\t\t\t\t\t\t<Box ml={1} alignItems=\"center\" display=\"inline-flex\">\n\t\t\t\t\t\t\t\t\t\t\t{renderCountryName()}\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t<Box mt={1} mb={4}>\n\t\t\t\t\t\t\t\t\t\t{virusYesterday && (\n\t\t\t\t\t\t\t\t\t\t\t<EmojiRange country={currentCountry} world={worldData} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t\t\t<Box align=\"center\" mt={0.5} width={\"auto\"} mb={4}>\n\t\t\t\t\t\t\t\t\t\t<CountryStats />\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","const initialState = {\n\tisInitialLoading: false,\n\tisLoadingLocationData: false,\n\thasAppError: false,\n\thasLocationError: false,\n};\n\nexport default function (state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase \"IS_LOADING_INITIAL_DATA\": {\n\t\t\treturn { ...state, isInitialLoading: true };\n\t\t}\n\t\tcase \"HAS_LOADED_INTIAL_DATA\": {\n\t\t\treturn { ...state, isInitialLoading: false };\n\t\t}\n\t\tcase \"IS_LOADING_GEO_DATA\": {\n\t\t\treturn { ...state, isLoadingLocationData: true };\n\t\t}\n\t\tcase \"HAS_LOADED_GEO_DATA\": {\n\t\t\treturn { ...state, isLoadingLocationData: false };\n\t\t}\n\t\tcase \"NO_COUNTRY_DATA\": {\n\t\t\treturn initialState;\n\t\t}\n\t\tcase \"APP_ERROR\": {\n\t\t\treturn { ...state, hasAppError: true };\n\t\t}\n\t\tcase \"GEO_CODE_ERROR\": {\n\t\t\treturn { ...state, hasLocationError: true };\n\t\t}\n\t\tcase \"RESET_LOCATION_ERROR\": {\n\t\t\treturn { ...state, hasLocationError: false };\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import {combineReducers} from 'redux';\nimport currentLocation from './location';\nimport globalStats from './global';\nimport loading from './loading';\n\nexport default combineReducers({currentLocation, loading, globalStats})","export default function (state = {}, action) {\n\tswitch (action.type) {\n\t\tcase \"CURRENT_LOCATION\": {\n\t\t\tconst { payload } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcountry: payload.country_code,\n\t\t\t\tname: payload.country_name,\n\t\t\t\tlat: payload.latitude,\n\t\t\t\tlong: payload.longitude,\n\t\t\t};\n\t\t}\n\t\tcase \"COUNTRY_VIRUS_DATA\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload,\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","export default function (state = {}, action) {\n\tswitch (action.type) {\n\t\tcase \"GLOBAL_STATS\": {\n\t\t\treturn action.payload;\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../Redux/Reducers/index';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst middleware = [thunk]\n\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)))","import { createTheme } from \"@material-ui/core/styles\";\n\nconst colorPallete = {\n  primary: {\n    main: \"#03a9f4\",\n    light: \"#b3e5fc\",\n  },\n  secondary: {\n    main: \"#e0e0e0\",\n    dark: \"#bdbdbd\",\n  },\n  error: {\n    main: '#e53935'\n  }\n}\n\nconst theme = createTheme({\n  palette: colorPallete,\n  breakpoints: {\n    values: {\n      xs: 450,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n  typography: {\n    fontFamily: [\"Roboto Slab\", \"Ubuntu Condensed\", \"sans-serif\"].join(\",\"),\n    body1: {\n      fontFamily: [\"Ubuntu Condensed\", \"sans-serif\"].join(\",\"),\n    },\n    body2: {\n      fontFamily: [\"Ubuntu Condensed\", \"sans-serif\"].join(\",\"),\n    },\n  },\n  spacing: 16,\n  overrides: {\n    // Style sheet name ⚛️\n    MuiToggleButton: {\n      // Name of the rule\n      root: {\n        color: \"black\",\n        \"&$selected\": {\n          color: \"black\",\n          backgroundColor: colorPallete.primary.main,\n          border: `solid 1px ${colorPallete.primary.main}`,\n        },\n        \"&:hover\": {\n          backgroundColor: \"white\",\n        },\n        \"&$selected&:hover\": {\n          backgroundColor: colorPallete.primary.main,\n        },\n      },\n    },\n    MuiSlider: {\n      root: {\n        '&.MuiSlider-marked': {\n          '&:hover': {\n            cursor: 'default'\n        }}\n      }\n    }\n  },\n});\n\ntheme.typography.h2 = {\n  fontSize: \"3.75em\",\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"2.75em\",\n  },\n};\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\n\nimport store from \"./Redux/store\";\nimport theme from \"./Theme/theme\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<App />\n\t\t\t</ThemeProvider>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}